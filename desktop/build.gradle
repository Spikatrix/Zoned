apply plugin: "java-library"

sourceCompatibility = 1.7
sourceSets.main.java.srcDirs = [ "src/" ]

project.ext.mainClassName = "com.cg.zoned.desktop.DesktopLauncher"
project.ext.assetsDir = new File("../android/assets")
project.setProperty("archivesBaseName", appName)
project.setVersion("0.0.3-dev")
// Remember to update the GAME_VERSION in Constants.java
// And versionName in Android's build.gradle
// And the version in the badge in the README file
// Or for Linux users, use the versionUpdate.sh script

task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
    args project.getVersion()
}

task debug(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
    debug = true
    args project.getVersion()
}

task dist(type: Jar) {
    //from files(sourceSets.main.output.classesDir)
    //from files(sourceSets.main.output.resourcesDir)
    from files(sourceSets.main.output.classesDirs)
    from {configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }}
    from {configurations.compile.collect {zipTree(it)}}
    from files(project.assetsDir)

    manifest {
        attributes 'Main-Class': project.mainClassName
        attributes 'Game-Version': project.getVersion()
    }
}

dist.dependsOn classes

eclipse {
    project {
        name = appName + "-desktop"
        linkedResource name: 'assets', type: '2', location: 'PARENT-1-PROJECT_LOC/android/assets'
    }
}

task afterEclipseImport(description: "Post processing after project generation", group: "IDE") {
  doLast {
    def classpath = new XmlParser().parse(file(".classpath"))
    new Node(classpath, "classpathentry", [ kind: 'src', path: 'assets' ])
    def writer = new FileWriter(file(".classpath"))
    def printer = new XmlNodePrinter(new PrintWriter(writer))
    printer.setPreserveWhitespace(true)
    printer.print(classpath)
  }
}
